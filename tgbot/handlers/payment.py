import os
from yookassa import Configuration, Payment
from dotenv import load_dotenv
import asyncio

from tgbot.keyboards.inline import training_period
from tgbot.database import add_payment

load_dotenv()

TOKEN = os.getenv("TOKEN")
YOOKASSA_SHOP_ID = os.getenv("YOOKASSA_SHOP_ID")
YOOKASSA_SECRET_KEY = os.getenv("YOOKASSA_SECRET_KEY")
YOOKASSA_RETURN_URL = os.getenv("YOOKASSA_RETURN_URL")

Configuration.account_id = YOOKASSA_SHOP_ID
Configuration.secret_key = YOOKASSA_SECRET_KEY


def create_payment(amount):
    payment = Payment.create({
        "amount": {
            "value": "1.00",
            "currency": "RUB"
        },
        "confirmation": {
            "type": "redirect",
            "return_url": "https://t.me/nikkestelegrambot"  # –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL
        },
        "capture": True,
        "description": "–û–ø–ª–∞—Ç–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π receipt
        "receipt": {
            "customer": {
                "email": "user@example.com"  # –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
            },
            "items": [
                {
                    "description": "–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞",
                    "quantity": "1.00",
                    "amount": {
                        "value": "1.00",
                        "currency": "RUB"
                    },
                    "vat_code": "1",  # –ö–æ–¥ –ù–î–° (1 ‚Äì –±–µ–∑ –ù–î–°, 2 ‚Äì 10%, 3 ‚Äì 20% –∏ —Ç. –¥.)
                    "payment_mode": "full_prepayment",  # –ü–æ–ª–Ω–∞—è –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞
                    "payment_subject": "service"  # –¢–∏–ø –ø–ª–∞—Ç–µ–∂–∞ (—É—Å–ª—É–≥–∞)
                }
            ]
        }
    })

    return payment.id, payment.confirmation.confirmation_url

def check_payment_status(payment_id):
    try:
        payment = Payment.find_one(payment_id)  # ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
        return payment.status  # –í–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã: "pending", "succeeded", "canceled"
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–ª–∞—Ç–µ–∂–∞: {e}")


async def check_payment_loop(payment_id, user_id, bot):
    """–§–æ–Ω–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã (–∂–¥–µ—Ç –¥–æ 5 –º–∏–Ω—É—Ç)"""
    for _ in range(10):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç–µ–∂ 10 —Ä–∞–∑ (–ø–æ 30 —Å–µ–∫ = 5 –º–∏–Ω—É—Ç)
        await asyncio.sleep(30)  # ‚è≥ –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π
        status = check_payment_status(payment_id)

        if status == "succeeded":
            add_payment(user_id)  # ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –≤ –ë–î

            await bot.send_message(
                user_id,
                "‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –í–∞–º –æ—Ç–∫—Ä—ã—Ç –¥–æ—Å—Ç—É–ø –∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–º –ø—Ä–æ–≥—Ä–∞–º–º–∞–º.",
                reply_markup=training_period()  # ‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é —Å –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏
            )
            return  # üöÄ –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã

        elif status == "canceled":
            await bot.send_message(
                user_id,
                "‚ùå –û–ø–ª–∞—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
            )
            return  # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏, –µ—Å–ª–∏ –ø–ª–∞—Ç–µ–∂ –æ—Ç–º–µ–Ω–µ–Ω

    # –ï—Å–ª–∏ –ø–æ—Å–ª–µ 5 –º–∏–Ω—É—Ç –ø–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω
    await bot.send_message(
        user_id,
        "‚åõ –û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –µ—â–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–∑–∂–µ."
    )
